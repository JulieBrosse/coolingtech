window.scriptsLoaded = window.scriptsLoaded || {}; window.scriptProcessStart = window.scriptProcessStart || {}; window.scriptProcessStart['owa.NotificationDiagnostics.js'] = (new Date()).getTime();(window.$wj=window.$wj||[]).push([[143],{1496:function(t,n,i){"use strict";i.r(n);var e=i(0),a=i(279),o=i(25);function r(){return new Date(Date.now()).toLocaleTimeString()}function s(t,n,i){t.push(n),t.length>i&&t.splice(0,1)}var c,u=i(4),d=Object(u.action)("addChannelDatapoint")(function(t,n){s(n.datapoints,{message:t,timestamp:r()},1e3)}),p=i(321),f=!1;function b(t){f||(f=!0,c={name:"Channel",datapoints:[]},p.d.import().then(function(t){p.e.importAndExecute(c,t())})),d(t,c)}var l=i(12);function m(t){var n="";if(t){var i=l.n.folderTable.get(t);i&&(n=i.DisplayName)}return n}var v,h=Object(u.action)("addNotificationDatapoint")(function(t,n){var i,e,a=t,o=t;s(n.datapoints,{id:t.id,type:t.EventType,folder:m(a.FolderId||o.folderId),subject:(i=a,e="",i.Conversation?e=i.Conversation.ConversationTopic:i.Item&&(e=i.Item.Subject),e),timestamp:r()},1e3)}),w=!1;function D(t){w||(w=!0,v={name:"Notifications",datapoints:[]},p.d.import().then(function(t){p.e.importAndExecute(v,t())})),h(t,v)}var g,j=Object(u.action)("addSubscriptionDatapoint")(function(t,n){n.datapoints.push({id:t.subscriptionId,type:t.subscriptionParameters&&t.subscriptionParameters.NotificationType?t.subscriptionParameters.NotificationType:"",folder:t.subscriptionParameters?m(t.subscriptionParameters.FolderId):"",status:"Uninitialized",handlers:1,retries:0,error:""})}),S=Object(u.action)("removeSubscriptionDatapoint")(function(t,n){for(var i=n.datapoints,e=0;e<i.length;e++)if(i[e].id===t){i.splice(e,1);break}}),T=Object(u.action)("setSubscriptionDatapointStatus")(function(t,n,i,e,a,o){for(var r=o.datapoints,s=0;s<r.length;s++)if(r[s].id===t)switch(r[s].handlers=i,r[s].retries=e,a&&(r[s].error=a),n){case 0:r[s].status="Uninitialized";break;case 3:r[s].status="Connected";break;case 2:r[s].status="Pending";break;case 1:r[s].status="Disconnected"}}),I=!1;function C(){I||(I=!0,g={name:"Subscriptions",datapoints:[]},p.d.import().then(function(t){p.e.importAndExecute(g,t())}))}function N(t){C(),j(t,g)}function y(t,n,i){C(),T(t.subscriptionId,n.status,n.refs.length,n.retries,i,g)}function O(t){C(),S(t.subscriptionId,g)}var P=i(7);function k(t){P.c.warn(t)}function E(t){P.c.error(t)}function A(){return e.__awaiter(this,void 0,void 0,function(){var t,n;return e.__generator(this,function(i){switch(i.label){case 0:return Object(o.h)("fwk-devTools")?[4,a.d.import()]:[3,2];case 1:t=i.sent(),(n=t()).on(a.a.ChannelData,b),n.on(a.a.NotificationData,D),n.on(a.a.SubscriptionAdded,N),n.on(a.a.SubscriptionRemoved,O),n.on(a.a.SubscriptionUpdated,y),n.on(a.a.TraceWarn,k),n.on(a.a.TraceError,E),i.label=2;case 2:return[2]}})})}i.d(n,"initializeNotificationDiagnostics",function(){return A})}},0,[0,1,2,8,46,218,225,232]]);
//# sourceMappingURL=owa.NotificationDiagnostics.js.map
window.scriptsLoaded['owa.NotificationDiagnostics.js'] = 1; window.scriptProcessEnd = window.scriptProcessEnd || {}; window.scriptProcessEnd['owa.NotificationDiagnostics.js'] = (new Date()).getTime();